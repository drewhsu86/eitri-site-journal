{"ast":null,"code":"var _jsxFileName = \"/Users/bowserhsu/Documents/React/eitri-site-journal/client/src/components/Entries/EditEntry.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { getEntry, updateEntry, deleteEntry } from '../../services/apiCalls';\nconst confirm = window.confirm;\n\nclass EditEntry extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (e, stateName) => {\n      // sets e.target.value to whatever state is named\n      this.setState({\n        [stateName]: e.target.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n\n      if (!this.state.inputNotes) {\n        this.setState({\n          errMsg: 'Entry name is required!'\n        });\n      } else {\n        try {\n          const response = await updateEntry(this.props.match.params.id, {\n            notes: this.state.inputNotes\n          });\n          this.props.history.push(`/entries/${this.props.match.params.id}`);\n        } catch (error) {\n          console.log(error.message);\n          this.setState({\n            errMsg: error.message\n          });\n        }\n      }\n    };\n\n    this.handleDelete = async () => {\n      const confirm1 = confirm('Do you want to delete this entry? WARNING: PERMANENT!!!');\n\n      if (confirm1) {\n        const confirm2 = confirm('FINAL WARNING: DELETION PERMANENT! PROCEED?!?');\n\n        if (confirm2) {\n          try {\n            const response = await deleteEntry(this.props.match.params.id);\n            console.log(response);\n            this.props.history.push(`/projects/${this.state.projectID}`);\n          } catch (error) {\n            console.log(error.message);\n            this.setState({\n              errMsg: error.message\n            });\n          }\n        }\n      }\n    };\n\n    this.state = {\n      inputNotes: '',\n      projectID: '',\n      errMsg: ''\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await getEntry(this.props.match.params.id);\n      this.setState({\n        inputNotes: response.notes,\n        projectID: response.project._id\n      });\n    } catch (error) {\n      console.log(error.message);\n      this.setState({\n        errMsg: error.message\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, \"Edit the note for this entry\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"UpdateForm\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"entryName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"Entry Notes\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      value: this.state.inputNotes,\n      onChange: e => this.handleChange(e, 'inputNotes'),\n      name: \"entryName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"Edit Entry\")), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, \" Delete this entry? \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, \"Delete (PERMANENT)\"));\n  }\n\n}\n\nexport default withRouter(EditEntry);","map":{"version":3,"sources":["/Users/bowserhsu/Documents/React/eitri-site-journal/client/src/components/Entries/EditEntry.jsx"],"names":["React","Component","withRouter","getEntry","updateEntry","deleteEntry","confirm","window","EditEntry","constructor","props","handleChange","e","stateName","setState","target","value","handleSubmit","preventDefault","state","inputNotes","errMsg","response","match","params","id","notes","history","push","error","console","log","message","handleDelete","confirm1","confirm2","projectID","componentDidMount","project","_id","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,QAAmD,yBAAnD;AAEA,MAAMC,OAAO,GAAGC,MAAM,CAACD,OAAvB;;AAEA,MAAME,SAAN,SAAwBP,SAAxB,CAAkC;AAChCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAyBnBC,YAzBmB,GAyBJ,CAACC,CAAD,EAAIC,SAAJ,KAAkB;AAC/B;AACA,WAAKC,QAAL,CAAc;AACZ,SAACD,SAAD,GAAaD,CAAC,CAACG,MAAF,CAASC;AADV,OAAd;AAGD,KA9BkB;;AAAA,SAgCnBC,YAhCmB,GAgCJ,MAAOL,CAAP,IAAa;AAC1BA,MAAAA,CAAC,CAACM,cAAF;;AAEA,UAAI,CAAC,KAAKC,KAAL,CAAWC,UAAhB,EAA4B;AAC1B,aAAKN,QAAL,CAAc;AACZO,UAAAA,MAAM,EAAE;AADI,SAAd;AAGD,OAJD,MAIO;AACL,YAAI;AACF,gBAAMC,QAAQ,GAAG,MAAMlB,WAAW,CAAC,KAAKM,KAAL,CAAWa,KAAX,CAAiBC,MAAjB,CAAwBC,EAAzB,EAA4B;AAC5DC,YAAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC;AAD0C,WAA5B,CAAlC;AAIA,eAAKV,KAAL,CAAWiB,OAAX,CAAmBC,IAAnB,CAAyB,YAAW,KAAKlB,KAAL,CAAWa,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,EAA/D;AACD,SAND,CAME,OAAOI,KAAP,EAAc;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACA,eAAKlB,QAAL,CAAc;AACZO,YAAAA,MAAM,EAAEQ,KAAK,CAACG;AADF,WAAd;AAGD;AACF;AACF,KArDkB;;AAAA,SAuDnBC,YAvDmB,GAuDJ,YAAY;AACzB,YAAMC,QAAQ,GAAG5B,OAAO,CAAC,yDAAD,CAAxB;;AAEA,UAAI4B,QAAJ,EAAc;AACZ,cAAMC,QAAQ,GAAG7B,OAAO,CAAC,+CAAD,CAAxB;;AAEA,YAAI6B,QAAJ,EAAc;AACZ,cAAI;AACF,kBAAMb,QAAQ,GAAG,MAAMjB,WAAW,CAAC,KAAKK,KAAL,CAAWa,KAAX,CAAiBC,MAAjB,CAAwBC,EAAzB,CAAlC;AAEAK,YAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AAEA,iBAAKZ,KAAL,CAAWiB,OAAX,CAAmBC,IAAnB,CAAyB,aAAY,KAAKT,KAAL,CAAWiB,SAAU,EAA1D;AACD,WAND,CAME,OAAOP,KAAP,EAAc;AACdC,YAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACA,iBAAKlB,QAAL,CAAc;AACZO,cAAAA,MAAM,EAAEQ,KAAK,CAACG;AADF,aAAd;AAGD;AACF;AACF;AACF,KA5EkB;;AAGjB,SAAKb,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXgB,MAAAA,SAAS,EAAE,EAFA;AAGXf,MAAAA,MAAM,EAAE;AAHG,KAAb;AAKD;;AAED,QAAMgB,iBAAN,GAA0B;AACxB,QAAI;AACF,YAAMf,QAAQ,GAAG,MAAMnB,QAAQ,CAAC,KAAKO,KAAL,CAAWa,KAAX,CAAiBC,MAAjB,CAAwBC,EAAzB,CAA/B;AACA,WAAKX,QAAL,CAAc;AACZM,QAAAA,UAAU,EAAEE,QAAQ,CAACI,KADT;AAEZU,QAAAA,SAAS,EAAEd,QAAQ,CAACgB,OAAT,CAAiBC;AAFhB,OAAd;AAID,KAND,CAME,OAAOV,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACA,WAAKlB,QAAL,CAAc;AACZO,QAAAA,MAAM,EAAEQ,KAAK,CAACG;AADF,OAAd;AAGD;AACF;;AAuDDQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,eAEE;AAAM,MAAA,SAAS,EAAC,YAAhB;AAA6B,MAAA,QAAQ,EAAE,KAAKvB,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAU,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWC,UAA5B;AAAwC,MAAA,QAAQ,EAAER,CAAC,IAAI,KAAKD,YAAL,CAAkBC,CAAlB,EAAqB,YAArB,CAAvD;AAA2F,MAAA,IAAI,EAAC,WAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,CAFF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BATF,eAUE;AAAQ,MAAA,OAAO,EAAE,KAAKqB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAVF,CADF;AAcD;;AA9F+B;;AAiGlC,eAAe/B,UAAU,CAACM,SAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { getEntry, updateEntry, deleteEntry } from '../../services/apiCalls'\n\nconst confirm = window.confirm \n\nclass EditEntry extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      inputNotes: '',\n      projectID: '',\n      errMsg: ''\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await getEntry(this.props.match.params.id)\n      this.setState({\n        inputNotes: response.notes,\n        projectID: response.project._id \n      })\n    } catch (error) {\n      console.log(error.message)\n      this.setState({\n        errMsg: error.message \n      })\n    }\n  }\n\n  handleChange = (e, stateName) => {\n    // sets e.target.value to whatever state is named\n    this.setState({\n      [stateName]: e.target.value \n    })\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (!this.state.inputNotes) {\n      this.setState({\n        errMsg: 'Entry name is required!'\n      })\n    } else {\n      try {\n        const response = await updateEntry(this.props.match.params.id,{\n          notes: this.state.inputNotes\n        })\n\n        this.props.history.push(`/entries/${this.props.match.params.id}`)\n      } catch (error) {\n        console.log(error.message)\n        this.setState({\n          errMsg: error.message \n        })\n      }\n    }\n  }\n\n  handleDelete = async () => {\n    const confirm1 = confirm('Do you want to delete this entry? WARNING: PERMANENT!!!')\n    \n    if (confirm1) {\n      const confirm2 = confirm('FINAL WARNING: DELETION PERMANENT! PROCEED?!?')\n\n      if (confirm2) {\n        try {\n          const response = await deleteEntry(this.props.match.params.id)\n\n          console.log(response)\n\n          this.props.history.push(`/projects/${this.state.projectID}`)\n        } catch (error) {\n          console.log(error.message) \n          this.setState({\n            errMsg: error.message \n          })\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Page\">\n        <h1>Edit the note for this entry</h1>\n        <form className=\"UpdateForm\" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"entryName\">Entry Notes</label>\n          <textarea value={this.state.inputNotes} onChange={e => this.handleChange(e, 'inputNotes')} name=\"entryName\" />\n\n          <button>Edit Entry</button>\n        </form>\n\n        <h1> Delete this entry? </h1>\n        <button onClick={this.handleDelete}>Delete (PERMANENT)</button>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(EditEntry)"]},"metadata":{},"sourceType":"module"}