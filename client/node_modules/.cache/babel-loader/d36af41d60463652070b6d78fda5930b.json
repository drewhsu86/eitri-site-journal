{"ast":null,"code":"var _jsxFileName = \"/Users/bowserhsu/Documents/React/eitri-site-journal/client/src/components/Entries/ViewEntry.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { getEntry } from '../../services/apiCalls';\n\nclass ViewEntry extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleAddImg = () => {\n      const addImg = !this.state.addImg;\n      this.setState({\n        addImg\n      });\n    };\n\n    this.state = {\n      entry: null,\n      addImg: false\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await getEntry(this.props.match.params.id);\n      console.log(response);\n      this.setState({\n        entry: response\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  render() {\n    const entry = this.state.entry;\n\n    if (!entry) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, \"Entry not found!\"));\n    } else {\n      const project = entry.project;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, \"Entry Notes\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, entry.notes), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, \"Project: \", project.name), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, \"Location: \"), \" \", /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 31\n        }\n      }, project.location ? project.location : 'Not given'), project.description ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 40\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 60\n        }\n      }, project.description)) : null, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.toggleAddImg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, \"Add An Image\"), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, entry.images.map((image, ind) => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: ind,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: image,\n          target: \"_blank\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }\n        }, image));\n      })));\n    }\n  }\n\n}\n\nexport default withRouter(ViewEntry);","map":{"version":3,"sources":["/Users/bowserhsu/Documents/React/eitri-site-journal/client/src/components/Entries/ViewEntry.jsx"],"names":["React","Component","withRouter","Link","getEntry","ViewEntry","constructor","props","toggleAddImg","addImg","state","setState","entry","componentDidMount","response","match","params","id","console","log","error","message","render","project","notes","name","location","description","images","map","image","ind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { getEntry } from '../../services/apiCalls'\n\nclass ViewEntry extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      entry: null,\n      addImg: false \n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await getEntry(this.props.match.params.id)\n\n      console.log(response)\n\n      this.setState({\n        entry: response \n      })\n    } catch (error) {\n      console.log(error.message)\n    }\n  }\n\n  toggleAddImg = () => {\n    const addImg = !this.state.addImg\n    this.setState({\n      addImg\n    })\n  }\n\n  render() {\n    const entry = this.state.entry \n    if (!entry) {\n      return (\n        <div className=\"Page\">\n          <h1>Entry not found!</h1>\n        </div>\n      )\n    } else {\n      const project = entry.project \n      return (\n        <div className=\"Page\">\n          <h1>Entry Notes</h1>\n\n          <p>{entry.notes}</p>\n\n          <h2>Project: {project.name}</h2>\n          <h4>Location: </h4> <p>{project.location ? project.location : 'Not given'}</p>\n          {\n            project.description ? <div><h4>Description</h4><p>{project.description}</p></div> : null  \n          }\n\n          <button onClick={this.toggleAddImg}>Add An Image</button>\n\n          <ul>\n            {\n              entry.images.map((image, ind) => {\n                return (<li key={ind}>\n                  <a href={image} target=\"_blank\">\n                    {image}\n                  </a>\n                </li>)\n              })\n            }\n          </ul>\n        </div>\n      )\n    }\n  }\n}\n\nexport default withRouter(ViewEntry)"]},"metadata":{},"sourceType":"module"}