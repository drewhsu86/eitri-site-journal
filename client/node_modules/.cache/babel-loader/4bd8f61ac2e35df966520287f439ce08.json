{"ast":null,"code":"var _jsxFileName = \"/Users/bowserhsu/Documents/React/eitri-site-journal/client/src/components/Projects/ViewProject.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { getProject } from '../../services/apiCalls';\n\nclass ViewProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      location: '',\n      description: '',\n      entries: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await getProject(this.props.match.params.id);\n      this.setState({\n        name: response.name,\n        location: response.location,\n        description: response.description,\n        entries: response.entries\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  render() {\n    if (!this.state.name) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, \"No Project Info Found\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, \"Project Site\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, this.state.name), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, \"Location: \"), \" \", /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 31\n        }\n      }, this.state.location ? this.state.location : 'Not given'), this.state.description ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 38\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 43\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 63\n        }\n      }, this.state.description)) : null, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, this.state.entries.map((entry, ind) => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: ind,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }\n        }, entry.notes));\n      })));\n    }\n  }\n\n}\n\nexport default withRouter(ViewProject);","map":{"version":3,"sources":["/Users/bowserhsu/Documents/React/eitri-site-journal/client/src/components/Projects/ViewProject.jsx"],"names":["React","Component","withRouter","Link","getProject","ViewProject","constructor","props","state","name","location","description","entries","componentDidMount","response","match","params","id","setState","error","console","log","message","render","map","entry","ind","notes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,SAASC,UAAT,QAA2B,yBAA3B;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAClCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,WAAW,EAAE,EAHF;AAIXC,MAAAA,OAAO,EAAE;AAJE,KAAb;AAMD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMV,UAAU,CAAC,KAAKG,KAAL,CAAWQ,KAAX,CAAiBC,MAAjB,CAAwBC,EAAzB,CAAjC;AAEA,WAAKC,QAAL,CAAc;AACZT,QAAAA,IAAI,EAAEK,QAAQ,CAACL,IADH;AAEZC,QAAAA,QAAQ,EAAEI,QAAQ,CAACJ,QAFP;AAGZC,QAAAA,WAAW,EAAEG,QAAQ,CAACH,WAHV;AAIZC,QAAAA,OAAO,EAAEE,QAAQ,CAACF;AAJN,OAAd;AAMD,KATD,CASE,OAAOO,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKf,KAAL,CAAWC,IAAhB,EAAsB;AACpB,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CADF;AAKD,KAND,MAMO;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKD,KAAL,CAAWC,IAAhB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,oBAGsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKD,KAAL,CAAWE,QAAX,GAAsB,KAAKF,KAAL,CAAWE,QAAjC,GAA4C,WAAhD,CAHtB,EAKI,KAAKF,KAAL,CAAWG,WAAX,gBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAL,eAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKH,KAAL,CAAWG,WAAf,CAAzB,CAAzB,GAA0F,IAL9F,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,KAAKH,KAAL,CAAWI,OAAX,CAAmBY,GAAnB,CAAuB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACrC,4BAAQ;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACN,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOD,KAAK,CAACE,KAAb,CADM,CAAR;AAGD,OAJD,CAFJ,CARF,CADF;AAoBD;AACF;;AAxDiC;;AA2DpC,eAAezB,UAAU,CAACG,WAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { getProject } from '../../services/apiCalls'\n\nclass ViewProject extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      name: '',\n      location: '',\n      description: '',\n      entries: []\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await getProject(this.props.match.params.id)\n\n      this.setState({\n        name: response.name,\n        location: response.location,\n        description: response.description,\n        entries: response.entries\n      })\n    } catch (error) {\n      console.log(error.message)\n    }\n  }\n\n  render() {\n    if (!this.state.name) {\n      return (\n        <div className=\"Page\">\n          <h1>No Project Info Found</h1>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"Page\">\n          <h1>Project Site</h1>\n          <h2>{this.state.name}</h2>\n          <h4>Location: </h4> <p>{this.state.location ? this.state.location : 'Not given'}</p>\n          {\n            this.state.description ? <div><h4>Description</h4><p>{this.state.description}</p></div> : null  \n          }\n\n          <ul>\n            {\n              this.state.entries.map((entry, ind) => {\n                return (<li key={ind}>\n                  <Link>{entry.notes}</Link>\n                </li>)\n              })\n            }\n          </ul>\n        </div>\n      )\n    }\n  }\n}\n\nexport default withRouter(ViewProject)\n"]},"metadata":{},"sourceType":"module"}