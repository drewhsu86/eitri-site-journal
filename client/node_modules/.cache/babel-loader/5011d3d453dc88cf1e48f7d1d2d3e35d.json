{"ast":null,"code":"var _jsxFileName = \"/Users/bowserhsu/Documents/React/eitri-site-journal/client/src/components/Entries/ViewEntry.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { getEntry, removeImage } from '../../services/apiCalls';\nimport AddImage from './AddImage';\n\nclass ViewEntry extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initialize = async () => {\n      try {\n        const response = await getEntry(this.props.match.params.id);\n        this.setState({\n          entry: response,\n          addImg: false\n        });\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    this.toggleAddImg = () => {\n      const addImg = !this.state.addImg;\n      this.setState({\n        addImg\n      });\n    };\n\n    this.handleRemoveImg = async (id, ind) => {\n      try {\n        await removeImage(id, ind);\n        await this.initialize();\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    this.state = {\n      entry: null,\n      addImg: false\n    };\n  }\n\n  componentDidMount() {\n    this.initialize();\n  }\n\n  render() {\n    const entry = this.state.entry;\n\n    if (!entry) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, \"Entry not found!\"));\n    } else {\n      const project = entry.project;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, \"Entry Notes\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, entry.notes), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, \"Project: \", project.name), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, \"Entry Created: \", entry.createdAt.slice(0, 10)), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.toggleAddImg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, !this.state.addImg ? 'Add An Image' : 'Hide Image Adder'), !this.state.addImg ? null : /*#__PURE__*/React.createElement(AddImage, {\n        entryID: this.props.match.params.id,\n        entryReset: this.initialize,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, entry.images.map((image, ind) => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: ind,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"ImageHolder\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: image,\n          target: \"_blank\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"ImagePreview\",\n          src: image,\n          alt: `This is a link to an image.`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"ImageRemoveButton\",\n          onClick: () => this.handleRemoveImg(this.props.match.params.id, ind),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }\n        }, \"Delete Image?\")));\n      })));\n    }\n  }\n\n}\n\nexport default withRouter(ViewEntry);","map":{"version":3,"sources":["/Users/bowserhsu/Documents/React/eitri-site-journal/client/src/components/Entries/ViewEntry.jsx"],"names":["React","Component","withRouter","getEntry","removeImage","AddImage","ViewEntry","constructor","props","initialize","response","match","params","id","setState","entry","addImg","error","console","log","message","toggleAddImg","state","handleRemoveImg","ind","componentDidMount","render","project","notes","name","createdAt","slice","images","map","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,yBAAtC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAChCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAanBC,UAbmB,GAaN,YAAY;AACvB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMP,QAAQ,CAAC,KAAKK,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAAzB,CAA/B;AAEA,aAAKC,QAAL,CAAc;AACZC,UAAAA,KAAK,EAAEL,QADK;AAEZM,UAAAA,MAAM,EAAE;AAFI,SAAd;AAID,OAPD,CAOE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,KAxBkB;;AAAA,SA0BnBC,YA1BmB,GA0BJ,MAAM;AACnB,YAAML,MAAM,GAAG,CAAC,KAAKM,KAAL,CAAWN,MAA3B;AACA,WAAKF,QAAL,CAAc;AACZE,QAAAA;AADY,OAAd;AAGD,KA/BkB;;AAAA,SAiCnBO,eAjCmB,GAiCD,OAAOV,EAAP,EAAWW,GAAX,KAAmB;AACnC,UAAI;AACF,cAAMpB,WAAW,CAACS,EAAD,EAAKW,GAAL,CAAjB;AACA,cAAM,KAAKf,UAAL,EAAN;AACD,OAHD,CAGE,OAAOQ,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,KAxCkB;;AAGjB,SAAKE,KAAL,GAAa;AACXP,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAID;;AAEDS,EAAAA,iBAAiB,GAAG;AAClB,SAAKhB,UAAL;AACD;;AA+BDiB,EAAAA,MAAM,GAAG;AACP,UAAMX,KAAK,GAAG,KAAKO,KAAL,CAAWP,KAAzB;;AACA,QAAI,CAACA,KAAL,EAAY;AACV,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADF;AAKD,KAND,MAMO;AACL,YAAMY,OAAO,GAAGZ,KAAK,CAACY,OAAtB;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIZ,KAAK,CAACa,KAAV,CAHF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAcD,OAAO,CAACE,IAAtB,CALF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAoBd,KAAK,CAACe,SAAN,CAAgBC,KAAhB,CAAsB,CAAtB,EAAwB,EAAxB,CAApB,CAPF,eAUE;AAAQ,QAAA,OAAO,EAAE,KAAKV,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqC,CAAC,KAAKC,KAAL,CAAWN,MAAZ,GAAqB,cAArB,GAAsC,kBAA3E,CAVF,EAYI,CAAC,KAAKM,KAAL,CAAWN,MAAZ,GAAqB,IAArB,gBACE,oBAAC,QAAD;AACE,QAAA,OAAO,EAAE,KAAKR,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EADnC;AAEE,QAAA,UAAU,EAAE,KAAKJ,UAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbN,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIM,KAAK,CAACiB,MAAN,CAAaC,GAAb,CAAiB,CAACC,KAAD,EAAQV,GAAR,KAAgB;AAC/B,4BAAQ;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACN;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAG,UAAA,IAAI,EAAEU,KAAT;AAAgB,UAAA,MAAM,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA;AAAK,UAAA,SAAS,EAAC,cAAf;AACE,UAAA,GAAG,EAAEA,KADP;AACc,UAAA,GAAG,EAAG,6BADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,CADF,eAKE;AACE,UAAA,SAAS,EAAC,mBADZ;AAEE,UAAA,OAAO,EAAE,MAAM,KAAKX,eAAL,CAAqB,KAAKf,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7C,EAAiDW,GAAjD,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BALF,CADM,CAAR;AAcD,OAfD,CAFJ,CApBF,CADF;AA2CD;AACF;;AAjG+B;;AAoGlC,eAAetB,UAAU,CAACI,SAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { getEntry, removeImage } from '../../services/apiCalls'\nimport AddImage from './AddImage'\n\nclass ViewEntry extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      entry: null,\n      addImg: false \n    }\n  }\n\n  componentDidMount() {\n    this.initialize()\n  }\n\n  initialize = async () => {\n    try {\n      const response = await getEntry(this.props.match.params.id)\n\n      this.setState({\n        entry: response,\n        addImg: false \n      })\n    } catch (error) {\n      console.log(error.message)\n    }\n  }\n\n  toggleAddImg = () => {\n    const addImg = !this.state.addImg\n    this.setState({\n      addImg\n    })\n  }\n\n  handleRemoveImg = async (id, ind) => {\n    try {\n      await removeImage(id, ind)\n      await this.initialize()\n    } catch (error) {\n      console.log(error.message)\n    }\n  }\n\n  render() {\n    const entry = this.state.entry \n    if (!entry) {\n      return (\n        <div className=\"Page\">\n          <h1>Entry not found!</h1>\n        </div>\n      )\n    } else {\n      const project = entry.project \n      return (\n        <div className=\"Page\">\n          <h1>Entry Notes</h1>\n\n          <p>{entry.notes}</p>\n\n          <h4>Project: {project.name}</h4>\n\n          <h4>Entry Created: {entry.createdAt.slice(0,10)}</h4>\n          \n\n          <button onClick={this.toggleAddImg}>{!this.state.addImg ? 'Add An Image' : 'Hide Image Adder'}</button>\n          {\n            !this.state.addImg ? null : (\n              <AddImage\n                entryID={this.props.match.params.id}\n                entryReset={this.initialize}\n              />\n            )\n          }\n\n          <ul>\n            {\n              entry.images.map((image, ind) => {\n                return (<li key={ind}>\n                  <div className=\"ImageHolder\">\n                    <a href={image} target=\"_blank\">\n                    <img className=\"ImagePreview\"\n                      src={image} alt={`This is a link to an image.`} />\n                    </a>\n                    <button\n                      className=\"ImageRemoveButton\"\n                      onClick={() => this.handleRemoveImg(this.props.match.params.id, ind)}\n                    >\n                      Delete Image?\n                    </button>\n                  </div>\n                </li>)\n              })\n            }\n          </ul>\n        </div>\n      )\n    }\n  }\n}\n\nexport default withRouter(ViewEntry)"]},"metadata":{},"sourceType":"module"}