{"ast":null,"code":"var _jsxFileName = \"/Users/bowserhsu/Documents/React/eitri-site-journal/client/src/components/Entries/AddEntry.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { createEntry } from '../../services/apiCalls';\n\nclass AddEntry extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (e, stateName) => {\n      // sets e.target.value to whatever state is named\n      this.setState({\n        [stateName]: e.target.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n\n      if (!this.state.inputNote) {\n        this.setState({\n          errMsg: 'Entry name is required!'\n        });\n      } else {\n        try {\n          const response = await createEntry({\n            notes: this.state.inputNotes\n          });\n          this.props.history.push('/');\n        } catch (error) {\n          console.log(error.message);\n          this.setState({\n            errMsg: error.message\n          });\n        }\n      }\n    };\n\n    this.state = {\n      inputNotes: '',\n      errMsg: ''\n    };\n  } // name required, location and description not required \n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"Write a note for this entry\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"UpdateForm\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"entryName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \"Entry Name\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      value: this.state.inputName,\n      onChange: e => this.handleChange(e, 'inputName'),\n      name: \"entryName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }\n    }, \"Create Entry\"))));\n  }\n\n}\n\nexport default withRouter(AddEntry);","map":{"version":3,"sources":["/Users/bowserhsu/Documents/React/eitri-site-journal/client/src/components/Entries/AddEntry.jsx"],"names":["React","Component","withRouter","createEntry","AddEntry","constructor","props","handleChange","e","stateName","setState","target","value","handleSubmit","preventDefault","state","inputNote","errMsg","response","notes","inputNotes","history","push","error","console","log","message","render","inputName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC/BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,YAXmB,GAWJ,CAACC,CAAD,EAAIC,SAAJ,KAAkB;AAC/B;AACA,WAAKC,QAAL,CAAc;AACZ,SAACD,SAAD,GAAaD,CAAC,CAACG,MAAF,CAASC;AADV,OAAd;AAGD,KAhBkB;;AAAA,SAkBnBC,YAlBmB,GAkBJ,MAAOL,CAAP,IAAa;AAC1BA,MAAAA,CAAC,CAACM,cAAF;;AAEA,UAAI,CAAC,KAAKC,KAAL,CAAWC,SAAhB,EAA2B;AACzB,aAAKN,QAAL,CAAc;AACZO,UAAAA,MAAM,EAAE;AADI,SAAd;AAGD,OAJD,MAIO;AACL,YAAI;AACF,gBAAMC,QAAQ,GAAG,MAAMf,WAAW,CAAC;AACjCgB,YAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWK;AADe,WAAD,CAAlC;AAIA,eAAKd,KAAL,CAAWe,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,SAND,CAME,OAAOC,KAAP,EAAc;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACA,eAAKhB,QAAL,CAAc;AACZO,YAAAA,MAAM,EAAEM,KAAK,CAACG;AADF,WAAd;AAGD;AACF;AACF,KAvCkB;;AAGjB,SAAKX,KAAL,GAAa;AACXK,MAAAA,UAAU,EAAE,EADD;AAEXH,MAAAA,MAAM,EAAE;AAFG,KAAb;AAID,GAR8B,CAU/B;;;AAgCAU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,eAEE;AAAM,MAAA,SAAS,EAAC,YAAhB;AAA6B,MAAA,QAAQ,EAAE,KAAKd,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAU,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWa,SAA5B;AAAuC,MAAA,QAAQ,EAAEpB,CAAC,IAAI,KAAKD,YAAL,CAAkBC,CAAlB,EAAqB,WAArB,CAAtD;AAAyF,MAAA,IAAI,EAAC,WAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAL,CAJF,CAFF,CADF;AAWD;;AAtD8B;;AAyDjC,eAAeN,UAAU,CAACE,QAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { createEntry } from '../../services/apiCalls'\n\nclass AddEntry extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      inputNotes: '',\n      errMsg: ''\n    }\n  }\n\n  // name required, location and description not required \n\n  handleChange = (e, stateName) => {\n    // sets e.target.value to whatever state is named\n    this.setState({\n      [stateName]: e.target.value \n    })\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (!this.state.inputNote) {\n      this.setState({\n        errMsg: 'Entry name is required!'\n      })\n    } else {\n      try {\n        const response = await createEntry({\n          notes: this.state.inputNotes \n        })\n\n        this.props.history.push('/')\n      } catch (error) {\n        console.log(error.message)\n        this.setState({\n          errMsg: error.message \n        })\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Page\">\n        <h1>Write a note for this entry</h1>\n        <form className=\"UpdateForm\" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"entryName\">Entry Name</label>\n          <textarea value={this.state.inputName} onChange={e => this.handleChange(e, 'inputName')} name=\"entryName\" />\n\n          <div><button>Create Entry</button></div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(AddEntry)"]},"metadata":{},"sourceType":"module"}