{"ast":null,"code":"var _jsxFileName = \"/Users/bowserhsu/Documents/React/eitri-site-journal/client/src/components/Entries/ViewEntry.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { getEntry } from '../../services/apiCalls';\n\nclass ViewEntry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      entry: null\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await getEntry(this.props.match.params.id);\n      console.log(response);\n      this.setState({\n        entry: response\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  render() {\n    if (!this.state.entry) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, \"Entry not found!\"));\n    } else {\n      const project = this.state.project;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, \"Project Site\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, project.name), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, \"Location: \"), \" \", /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 31\n        }\n      }, project.location ? project.location : 'Not given'), project.description ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 40\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 60\n        }\n      }, project.description)) : null, this.props.userID === project.user ? /*#__PURE__*/React.createElement(Link, {\n        to: `/projects/${this.props.match.params.id}/addentry`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 50\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 112\n        }\n      }, \"Create An Entry\")) : null, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, project.entries.map((entry, ind) => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: ind,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: `/entries/${entry._id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }\n        }, entry.notes));\n      })));\n    }\n  }\n\n}\n\nexport default withRouter(ViewEntry);","map":{"version":3,"sources":["/Users/bowserhsu/Documents/React/eitri-site-journal/client/src/components/Entries/ViewEntry.jsx"],"names":["React","Component","withRouter","getEntry","ViewEntry","constructor","props","state","entry","componentDidMount","response","match","params","id","console","log","setState","error","message","render","project","name","location","description","userID","user","entries","map","ind","_id","notes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,yBAAzB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMP,QAAQ,CAAC,KAAKG,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,EAAzB,CAA/B;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,WAAKM,QAAL,CAAc;AACZR,QAAAA,KAAK,EAAEE;AADK,OAAd;AAGD,KARD,CAQE,OAAOO,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,OAAlB;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKZ,KAAL,CAAWC,KAAhB,EAAuB;AACrB,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADF;AAKD,KAND,MAMO;AACL,YAAMY,OAAO,GAAG,KAAKb,KAAL,CAAWa,OAA3B;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,OAAO,CAACC,IAAb,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,oBAGsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,OAAO,CAACE,QAAR,GAAmBF,OAAO,CAACE,QAA3B,GAAsC,WAA1C,CAHtB,EAKIF,OAAO,CAACG,WAAR,gBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAL,eAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIH,OAAO,CAACG,WAAZ,CAAzB,CAAtB,GAAoF,IALxF,EAQI,KAAKjB,KAAL,CAAWkB,MAAX,KAAsBJ,OAAO,CAACK,IAA9B,gBAAqC,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAG,aAAY,KAAKnB,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA9D,CAArC,GAAqI,IARzI,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIO,OAAO,CAACM,OAAR,CAAgBC,GAAhB,CAAoB,CAACnB,KAAD,EAAQoB,GAAR,KAAgB;AAClC,4BAAQ;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACN,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAG,YAAWpB,KAAK,CAACqB,GAAI,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoCrB,KAAK,CAACsB,KAA1C,CADM,CAAR;AAGD,OAJD,CAFJ,CAVF,CADF;AAsBD;AACF;;AAvD+B;;AA0DlC,eAAe5B,UAAU,CAACE,SAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { getEntry } from '../../services/apiCalls'\n\nclass ViewEntry extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      entry: null \n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await getEntry(this.props.match.params.id)\n\n      console.log(response)\n\n      this.setState({\n        entry: response \n      })\n    } catch (error) {\n      console.log(error.message)\n    }\n  }\n\n  render() {\n    if (!this.state.entry) {\n      return (\n        <div className=\"Page\">\n          <h1>Entry not found!</h1>\n        </div>\n      )\n    } else {\n      const project = this.state.project \n      return (\n        <div className=\"Page\">\n          <h1>Project Site</h1>\n          <h2>{project.name}</h2>\n          <h4>Location: </h4> <p>{project.location ? project.location : 'Not given'}</p>\n          {\n            project.description ? <div><h4>Description</h4><p>{project.description}</p></div> : null  \n          }\n\n          { this.props.userID === project.user ? <Link to={`/projects/${this.props.match.params.id}/addentry`}><h2>Create An Entry</h2></Link> : null }\n\n          <ul>\n            {\n              project.entries.map((entry, ind) => {\n                return (<li key={ind}>\n                  <Link to={`/entries/${entry._id}`}>{entry.notes}</Link>\n                </li>)\n              })\n            }\n          </ul>\n        </div>\n      )\n    }\n  }\n}\n\nexport default withRouter(ViewEntry)"]},"metadata":{},"sourceType":"module"}