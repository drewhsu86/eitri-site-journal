{"ast":null,"code":"var _jsxFileName = \"/Users/bowserhsu/Documents/React/eitri-site-journal/client/src/components/Entries/AddImage.jsx\";\nimport React, { Component } from 'react';\nimport { addImage, imgurImage } from '../../services/apiCalls';\nimport ToggleSwitch from './ToggleSwitch';\nconst IMGUR_BUTTON = 'Upload Using Imgur Or Image URL';\nconst IMGUR_LOADING = 'Uploading...';\nexport default class AddImage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (e, stateName) => {\n      // sets e.target.value to whatever state is named\n      this.setState({\n        [stateName]: e.target.value\n      });\n    };\n\n    this.handleToggleCapture = () => {\n      const capture = !this.state.capture;\n      this.setState({\n        capture\n      });\n    };\n\n    this.toBase64 = file => new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = () => resolve(reader.result);\n\n      reader.onerror = error => reject(error);\n    });\n\n    this.handleImgur = async e => {\n      if (this.state.imgurBtn === IMGUR_BUTTON) {\n        // change the button state and then api call \n        this.setState({\n          imgurBtn: IMGUR_LOADING\n        });\n\n        try {\n          const file = e.target.files[0];\n          const fileBase64 = await this.toBase64(file);\n          const response = await imgurImage({\n            base64: fileBase64.split(',')[1],\n            name: file.name\n          });\n          console.log(response);\n          const addResponse = await addImage(this.props.entryID, response.link);\n          console.log(addResponse);\n          this.setState({\n            errMsg: 'Imgur Upload Successful',\n            imgurBtn: IMGUR_BUTTON,\n            inputURL: ''\n          });\n          this.props.entryReset();\n        } catch (error) {\n          console.log(error.message);\n          this.setState({\n            errMsg: error.message,\n            imgurBtn: IMGUR_BUTTON\n          });\n        }\n      }\n    };\n\n    this.handleAddImage = async () => {\n      try {\n        const response = await addImage(this.props.entryID, this.state.inputURL);\n        console.log(response);\n      } catch (error) {\n        console.log(error.message);\n        this.setState({\n          errMsg: error.message\n        });\n      }\n    };\n\n    this.state = {\n      inputURL: '',\n      errMsg: '',\n      imgurBtn: IMGUR_BUTTON,\n      camFile: null,\n      capture: false\n    };\n  }\n\n  render() {\n    let captureOption = {};\n\n    if (this.state.capture) {\n      captureOption.capture = \"camera\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"AddImage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, this.state.imgurBtn), this.state.errMsg ? /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 31\n      }\n    }, this.state.errMsg) : null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"inputFile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, \"From Files Or Camera\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ToggleSwitch, {\n      isOn: this.state.capture,\n      onClick: this.handleToggleCapture,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }), \" \\xA0\", this.state.capture ? 'From Camera' : 'From File'), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      type: \"file\",\n      accept: \"image/*\"\n    }, captureOption, {\n      onChange: this.handleImgur,\n      name: \"inputFile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"inputURL\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, \"Enter Or Edit Image URL\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.inputURL,\n      onChange: e => this.handleChange(e, 'inputURL'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }), this.state.inputURL ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleAddImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }, \"Add Image URL To Entry\") : null));\n  }\n\n}","map":{"version":3,"sources":["/Users/bowserhsu/Documents/React/eitri-site-journal/client/src/components/Entries/AddImage.jsx"],"names":["React","Component","addImage","imgurImage","ToggleSwitch","IMGUR_BUTTON","IMGUR_LOADING","AddImage","constructor","props","handleChange","e","stateName","setState","target","value","handleToggleCapture","capture","state","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","handleImgur","imgurBtn","files","fileBase64","response","base64","split","name","console","log","addResponse","entryID","link","errMsg","inputURL","entryReset","message","handleAddImage","camFile","render","captureOption"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { addImage, imgurImage } from '../../services/apiCalls'\nimport ToggleSwitch from './ToggleSwitch'\n\nconst IMGUR_BUTTON = 'Upload Using Imgur Or Image URL'\nconst IMGUR_LOADING = 'Uploading...'\n\nexport default class AddImage extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      inputURL: '',\n      errMsg: '',\n      imgurBtn: IMGUR_BUTTON,\n      camFile: null,\n      capture: false \n    }\n  }\n\n  handleChange = (e, stateName) => {\n    // sets e.target.value to whatever state is named\n    this.setState({\n      [stateName]: e.target.value \n    })\n  }\n\n  handleToggleCapture = () => {\n    const capture = !this.state.capture \n    this.setState({\n      capture \n    })\n  }\n\n  // convert file to base64 \n  // from: https://stackoverflow.com/questions/36280818/how-to-convert-file-to-base64-in-javascript\n  toBase64 = file => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n\n  handleImgur = async (e) => {\n    if (this.state.imgurBtn === IMGUR_BUTTON) {\n      // change the button state and then api call \n      this.setState({\n        imgurBtn: IMGUR_LOADING \n      })\n      try {\n        const file = e.target.files[0]\n        const fileBase64 = await this.toBase64(file)\n\n        const response = await imgurImage({\n          base64: fileBase64.split(',')[1],\n          name: file.name \n        })\n\n        console.log(response)\n\n        const addResponse = await addImage(this.props.entryID, response.link)\n\n        console.log(addResponse)\n\n        this.setState({\n          errMsg: 'Imgur Upload Successful',\n          imgurBtn: IMGUR_BUTTON,\n          inputURL: ''\n        })\n\n        this.props.entryReset()\n      } catch (error) {\n        console.log(error.message)\n        this.setState({\n          errMsg: error.message,\n          imgurBtn: IMGUR_BUTTON\n        })\n      }\n    }\n  }\n\n  handleAddImage = async () => {\n    try {\n      const response = await addImage(this.props.entryID, this.state.inputURL)\n\n      console.log(response) \n\n    } catch (error) {\n        console.log(error.message)\n        this.setState({\n          errMsg: error.message\n        })\n      }\n  }\n\n  render() {\n    let captureOption = {}\n    if (this.state.capture) {\n      captureOption.capture = \"camera\"\n    }\n    return (\n      <div className=\"AddImage\">\n        <section>\n        <h3>{this.state.imgurBtn}</h3>\n\n        {\n          this.state.errMsg ? <h4>{this.state.errMsg}</h4> : null \n        }\n\n        <label htmlFor=\"inputFile\">From Files Or Camera</label>\n        <div>\n          <ToggleSwitch isOn={this.state.capture} onClick={this.handleToggleCapture} /> &nbsp;\n          {this.state.capture ? 'From Camera' : 'From File'}\n        </div>\n         \n        <br/>\n        <input type=\"file\" accept=\"image/*\" {...captureOption} onChange={this.handleImgur} name=\"inputFile\" />\n\n        <br/>\n        <label htmlFor=\"inputURL\">Enter Or Edit Image URL</label>\n        <input \n          type=\"text\"\n          value={this.state.inputURL}\n          onChange={e => this.handleChange(e, 'inputURL')}\n        />\n        \n        {\n          this.state.inputURL ? <button onClick={this.handleAddImage}>Add Image URL To Entry</button> : null \n        }\n        </section>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}