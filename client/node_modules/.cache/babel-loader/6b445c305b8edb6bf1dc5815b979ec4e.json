{"ast":null,"code":"var _jsxFileName = \"/Users/bowserhsu/Documents/React/eitri-site-journal/client/src/components/Projects/AddProject.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { createProject } from '../../services/apiCalls';\n\nclass AddProject extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (e, stateName) => {\n      // sets e.target.value to whatever state is named\n      this.setState({\n        [stateName]: e.target.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n\n      if (!this.state.inputName) {\n        this.setState({\n          errMsg: 'Project name is required!'\n        });\n      } else {\n        try {\n          const response = await createProject({\n            name: this.state.inputName,\n            location: this.state.inputLocation,\n            description: this.state.inputDescription\n          });\n          console.log(response);\n          this.props.history.push('/');\n        } catch (error) {\n          console.log(error.message);\n          this.setState({\n            errMsg: error.message\n          });\n        }\n      }\n    };\n\n    this.state = {\n      inputName: '',\n      inputLocation: '',\n      inputDescription: '',\n      errMsg: ''\n    };\n  } // name required, location and description not required \n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"UpdateForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"projectName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \"Project Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.inputName,\n      onChange: e => this.handleChange(e, 'inputName'),\n      name: \"projectName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Project Location\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.inputLocation,\n      onChange: e => this.handleChange(e, 'inputLocation'),\n      name: \"location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, \"Project Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.inputDescription,\n      onChange: e => this.handleChange(e, 'inputDescription'),\n      name: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nexport default withRouter(AddProject);","map":{"version":3,"sources":["/Users/bowserhsu/Documents/React/eitri-site-journal/client/src/components/Projects/AddProject.jsx"],"names":["React","Component","withRouter","createProject","AddProject","constructor","props","handleChange","e","stateName","setState","target","value","handleSubmit","preventDefault","state","inputName","errMsg","response","name","location","inputLocation","description","inputDescription","console","log","history","push","error","message","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { createProject } from '../../services/apiCalls'\n\nclass AddProject extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      inputName: '',\n      inputLocation: '',\n      inputDescription: '',\n      errMsg: ''\n    }\n  }\n\n  // name required, location and description not required \n\n  handleChange = (e, stateName) => {\n    // sets e.target.value to whatever state is named\n    this.setState({\n      [stateName]: e.target.value \n    })\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (!this.state.inputName) {\n      this.setState({\n        errMsg: 'Project name is required!'\n      })\n    } else {\n      try {\n        const response = await createProject({\n          name: this.state.inputName,\n          location: this.state.inputLocation,\n          description: this.state.inputDescription \n        })\n\n        console.log(response)\n\n        this.props.history.push('/')\n      } catch (error) {\n        console.log(error.message)\n        this.setState({\n          errMsg: error.message \n        })\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Page\">\n        <form className=\"UpdateForm\">\n          <label htmlFor=\"projectName\">Project Name</label>\n          <input type=\"text\" value={this.state.inputName} onChange={e => this.handleChange(e, 'inputName')} name=\"projectName\" />\n\n          <label htmlFor=\"location\">Project Location</label>\n          <input type=\"text\" value={this.state.inputLocation} onChange={e => this.handleChange(e, 'inputLocation')} name=\"location\" />\n\n          <label htmlFor=\"description\">Project Name</label>\n          <input type=\"text\" value={this.state.inputDescription} onChange={e => this.handleChange(e, 'inputDescription')} name=\"description\" />\n\n          <button>Submit</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(AddProject)"]},"metadata":{},"sourceType":"module"}