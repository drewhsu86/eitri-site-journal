{"ast":null,"code":"var _jsxFileName = \"/Users/bowserhsu/Documents/React/eitri-site-journal/client/src/components/Entries/AddImage.jsx\";\nimport React, { Component } from 'react';\nimport FileBase64 from 'react-file-base64';\nimport { addImage, imgurImage } from '../../services/apiCalls';\nconst IMGUR_BUTTON = 'Upload Using Imgur Or Image URL';\nconst IMGUR_LOADING = 'Uploading...';\nexport default class AddImage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (e, stateName) => {\n      // sets e.target.value to whatever state is named\n      this.setState({\n        [stateName]: e.target.value\n      });\n    };\n\n    this.toBase64 = file => new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = () => resolve(reader.result);\n\n      reader.onerror = error => reject(error);\n    });\n\n    this.handleImgur = async file => {\n      if (this.state.imgurBtn === IMGUR_BUTTON) {\n        // change the button state and then api call \n        this.setState({\n          imgurBtn: IMGUR_LOADING,\n          imgFile: file\n        });\n\n        try {\n          const response = await imgurImage({\n            base64: file.base64.split(',')[1],\n            name: file.file.name\n          });\n          console.log(response);\n          const addResponse = await addImage(this.props.entryID, response.link);\n          console.log(addResponse);\n          this.setState({\n            imgFile: null,\n            errMsg: 'Imgur Upload Successful',\n            imgurBtn: IMGUR_BUTTON,\n            inputURL: ''\n          });\n          this.props.entryReset();\n        } catch (error) {\n          console.log(error.message);\n          this.setState({\n            imgFile: null,\n            errMsg: error.message,\n            imgurBtn: IMGUR_BUTTON\n          });\n        }\n      }\n    };\n\n    this.handleAddImage = async () => {\n      try {\n        const response = await addImage(this.props.entryID, this.state.inputURL);\n        console.log(response);\n      } catch (error) {\n        console.log(error.message);\n        this.setState({\n          errMsg: error.message\n        });\n      }\n    };\n\n    this.state = {\n      imgFile: null,\n      inputURL: '',\n      errMsg: '',\n      imgurBtn: IMGUR_BUTTON\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"AddImage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, this.state.imgurBtn), this.state.errMsg ? /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 31\n      }\n    }, this.state.errMsg) : null, /*#__PURE__*/React.createElement(FileBase64, {\n      multiple: false,\n      onDone: this.handleImgur,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      capture: \"camera\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"inputURL\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, \"Enter Or Edit Image URL\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.inputURL,\n      onChange: e => this.handleChange(e, 'inputURL'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }), this.state.inputURL ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleAddImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 33\n      }\n    }, \"Add Image URL To Entry\") : null);\n  }\n\n}","map":{"version":3,"sources":["/Users/bowserhsu/Documents/React/eitri-site-journal/client/src/components/Entries/AddImage.jsx"],"names":["React","Component","FileBase64","addImage","imgurImage","IMGUR_BUTTON","IMGUR_LOADING","AddImage","constructor","props","handleChange","e","stateName","setState","target","value","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","handleImgur","state","imgurBtn","imgFile","response","base64","split","name","console","log","addResponse","entryID","link","errMsg","inputURL","entryReset","message","handleAddImage","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport FileBase64 from 'react-file-base64'\nimport { addImage, imgurImage } from '../../services/apiCalls'\n\nconst IMGUR_BUTTON = 'Upload Using Imgur Or Image URL'\nconst IMGUR_LOADING = 'Uploading...'\n\nexport default class AddImage extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      imgFile: null,\n      inputURL: '',\n      errMsg: '',\n      imgurBtn: IMGUR_BUTTON\n    }\n  }\n\n  handleChange = (e, stateName) => {\n    // sets e.target.value to whatever state is named\n    this.setState({\n      [stateName]: e.target.value \n    })\n  }\n\n  // convert file to base64 \n  // from: https://stackoverflow.com/questions/36280818/how-to-convert-file-to-base64-in-javascript\n  toBase64 = file => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n\n  handleImgur = async (file) => {\n    if (this.state.imgurBtn === IMGUR_BUTTON) {\n      // change the button state and then api call \n      this.setState({\n        imgurBtn: IMGUR_LOADING,\n        imgFile: file \n      })\n      try {\n        const response = await imgurImage({\n          base64: file.base64.split(',')[1],\n          name: file.file.name \n        })\n\n        console.log(response)\n\n        const addResponse = await addImage(this.props.entryID, response.link)\n\n        console.log(addResponse)\n\n        this.setState({\n          imgFile: null,\n          errMsg: 'Imgur Upload Successful',\n          imgurBtn: IMGUR_BUTTON,\n          inputURL: ''\n        })\n\n        this.props.entryReset()\n      } catch (error) {\n        console.log(error.message)\n        this.setState({\n          imgFile: null,\n          errMsg: error.message,\n          imgurBtn: IMGUR_BUTTON\n        })\n      }\n    }\n  }\n\n  handleAddImage = async () => {\n    try {\n      const response = await addImage(this.props.entryID, this.state.inputURL)\n\n      console.log(response) \n\n    } catch (error) {\n        console.log(error.message)\n        this.setState({\n          errMsg: error.message\n        })\n      }\n  }\n\n  render() {\n    return (\n      <div className=\"AddImage\">\n        <h3>{this.state.imgurBtn}</h3>\n\n        {\n          this.state.errMsg ? <h4>{this.state.errMsg}</h4> : null \n        }\n\n        <FileBase64\n          multiple={false}\n          onDone={this.handleImgur}\n        />\n\n        <input type=\"file\" accept=\"image/*\" capture=\"camera\" />\n\n        <label htmlFor=\"inputURL\">Enter Or Edit Image URL</label>\n        <input \n          type=\"text\"\n          value={this.state.inputURL}\n          onChange={e => this.handleChange(e, 'inputURL')}\n        />\n        \n        {\n          this.state.inputURL ? <button onClick={this.handleAddImage}>Add Image URL To Entry</button> : null \n        }\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}