{"ast":null,"code":"var _jsxFileName = \"/Users/bowserhsu/Documents/React/eitri-site-journal/client/src/components/Entries/ViewEntry.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { getEntry } from '../../services/apiCalls';\n\nclass ViewEntry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: '',\n      projectID: '',\n      userID: '',\n      createdAt: '',\n      images: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await getEntry(this.props.match.params.id);\n      console.log(response);\n      this.setState({\n        notes: response.notes,\n        projectID: response.project._id,\n        userID: response.project.user,\n        createdAt: response.createdAt,\n        images: response.images\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  render() {\n    if (!this.state.createdAt) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, \"Entry not found!\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      });\n    }\n  }\n\n}\n\nexport default withRouter(ViewEntry);","map":{"version":3,"sources":["/Users/bowserhsu/Documents/React/eitri-site-journal/client/src/components/Entries/ViewEntry.jsx"],"names":["React","Component","withRouter","getEntry","ViewEntry","constructor","props","state","notes","projectID","userID","createdAt","images","componentDidMount","response","match","params","id","console","log","setState","project","_id","user","error","message","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,yBAAzB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,SAAS,EAAE,EAFA;AAGXC,MAAAA,MAAM,EAAE,EAHG;AAIXC,MAAAA,SAAS,EAAE,EAJA;AAKXC,MAAAA,MAAM,EAAE;AALG,KAAb;AAOD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMX,QAAQ,CAAC,KAAKG,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,CAAwBC,EAAzB,CAA/B;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,WAAKM,QAAL,CAAc;AACZZ,QAAAA,KAAK,EAAEM,QAAQ,CAACN,KADJ;AAEZC,QAAAA,SAAS,EAAEK,QAAQ,CAACO,OAAT,CAAiBC,GAFhB;AAGZZ,QAAAA,MAAM,EAAEI,QAAQ,CAACO,OAAT,CAAiBE,IAHb;AAIZZ,QAAAA,SAAS,EAAEG,QAAQ,CAACH,SAJR;AAKZC,QAAAA,MAAM,EAAEE,QAAQ,CAACF;AALL,OAAd;AAOD,KAZD,CAYE,OAAOY,KAAP,EAAc;AACdN,MAAAA,OAAO,CAACC,GAAR,CAAYK,KAAK,CAACC,OAAlB;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKnB,KAAL,CAAWI,SAAhB,EAA2B;AACzB,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADF;AAKD,KAND,MAMO;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAKD;AACF;;AA7C+B;;AAgDlC,eAAeT,UAAU,CAACE,SAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { getEntry } from '../../services/apiCalls'\n\nclass ViewEntry extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      notes: '',\n      projectID: '',\n      userID: '',\n      createdAt: '',\n      images: []\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await getEntry(this.props.match.params.id)\n\n      console.log(response)\n\n      this.setState({\n        notes: response.notes,\n        projectID: response.project._id,\n        userID: response.project.user,\n        createdAt: response.createdAt,\n        images: response.images \n      })\n    } catch (error) {\n      console.log(error.message)\n    }\n  }\n\n  render() {\n    if (!this.state.createdAt) {\n      return (\n        <div className=\"Page\">\n          <h1>Entry not found!</h1>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"Page\">\n          \n        </div>\n      )\n    }\n  }\n}\n\nexport default withRouter(ViewEntry)"]},"metadata":{},"sourceType":"module"}